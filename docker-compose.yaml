version: '3'
name: bSocial

services:
  main_service:
    build:
      context: ./backend/main_service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
    container_name: main_service
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./backend/main_service/.env
    environment:
      - PORT=8000
      - JWT_SECRET=ffc632ce-0053-4bab-8077-93a4d14caaaf

  notification_service:
    build:
      context: ./backend/notification_service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
      - main_service
    container_name: notification_service
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - PORT=5000
      - JWT_SECRET=ffc632ce-0053-4bab-8077-93a4d14caaaf

  postgres:
    image: postgres
    container_name: bsocial_db
    restart: always
    ports:
      - "54320:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: bsocial
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  local_pgdata:
  kafka_data:
  zookeeper_data:
